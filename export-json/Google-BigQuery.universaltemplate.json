{
    "agent": null,
    "agentCluster": null,
    "agentClusterVar": null,
    "agentFieldsRestriction": "No Restriction",
    "agentType": "Any",
    "agentVar": null,
    "automaticOutputRetrievalFieldsRestriction": "No Restriction",
    "broadcastCluster": null,
    "broadcastClusterVar": null,
    "createConsole": false,
    "credentialFieldsRestriction": "No Restriction",
    "credentials": null,
    "credentialsVar": null,
    "description": "this task is to integrate with Google BigQuery",
    "desktopInteract": false,
    "elevateUser": false,
    "environment": [],
    "environmentVariablesFieldsRestriction": "No Restriction",
    "exitCodeOutput": null,
    "exitCodeProcessing": "Success Exitcode Range",
    "exitCodeProcessingFieldsRestriction": "No Restriction",
    "exitCodeText": null,
    "exitCodes": "0",
    "fields": [
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 1",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Google cloud platform Project ID",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "GCP Project ID",
            "name": "gcp_projectid",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": true,
            "sequence": 0,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "b772a758924848e39e2bc4716d5aac34"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Script Field 1",
            "fieldType": "Script",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "GCP KeyFile (API KEY) -Service Account",
            "name": "api_key",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": true,
            "sequence": 1,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "1d6a8593339049aab489700a4aa0be99"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "execute_query",
                    "fieldValueLabel": "BigQuery SQL",
                    "sequence": 0,
                    "sysId": "48a79a89a434406ea46f345c7acca265",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "list_dataset",
                    "fieldValueLabel": "List Dataset",
                    "sequence": 1,
                    "sysId": "1cfbcf7f1b00413b9ba9594b99151d61",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "list_tables",
                    "fieldValueLabel": "List Tables in a dataset",
                    "sequence": 2,
                    "sysId": "f3f31f8d6083424fbcf188125dd05e4c",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "job_info",
                    "fieldValueLabel": "View Job Information",
                    "sequence": 3,
                    "sysId": "fa039fd6833743eabf23bc88e0c92a9c",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "create_dataset",
                    "fieldValueLabel": "Create a Dataset",
                    "sequence": 4,
                    "sysId": "19f523bf03f84c5ab1f1850041df6969",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "load_local_file",
                    "fieldValueLabel": "Load Local file to a table",
                    "sequence": 5,
                    "sysId": "a3800752a22d4b02859614803dbe7e4f",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "load_cloud_file",
                    "fieldValueLabel": "Load Cloud Storage data to a Table",
                    "sequence": 6,
                    "sysId": "614677eff192431aa94599b28d6bba6e",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 1",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "select a function for execution in GCP",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Select a BigQuery Function",
            "name": "bigquery_function",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 2,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "64b80eb704654fb9b699a4438af949ce"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Script Field 2",
            "fieldType": "Script",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide your BigQuery SQL or schema as applicable for function for load data either from cloud or local storage  - e.g [ bigquery.SchemaField(\"name\", \"STRING\"),]",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "BigQuery SQL Or schema",
            "name": "bigquery_data",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 3,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "execute_query,load_local_file,load_cloud_file",
            "sysId": "ba8ec91c710d43a38b042cc27f9196bc"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 2",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the GCP Dataset ID (name of the dataset) - Must be alphanumeric",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Dataset ID",
            "name": "dataset_id",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 4,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "list_tables,create_dataset,load_local_file,load_cloud_file",
            "sysId": "1f9a5f748868494f9328f90d6dcaefa3"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 3",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the big query Job ID",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Job ID",
            "name": "job_id",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 5,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "job_info",
            "sysId": "9e0f35f8ba36406591f3967a76e858ac"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 4",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the GCP big Query location",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Location",
            "name": "location",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 6,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "job_info,create_dataset",
            "sysId": "c570595b6ced4fb7a1a15d7bee8fd6bf"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 5",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the local file path for the data load in to a table",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Local File Path",
            "name": "local_file_path",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 7,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_local_file",
            "sysId": "2dc76dd782864f96aa405cc932e56afe"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 6",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the URI for the cloud storage",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Cloud Storage URI",
            "name": "cloud_file",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 8,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_cloud_file",
            "sysId": "51419b76207745f284cebcde0684adfd"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "CSV",
                    "sequence": 0,
                    "sysId": "6d5edccedf144210b8ad1e34f2847e0d",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Avro",
                    "sequence": 1,
                    "sysId": "590e7547277a4d298794ea906732bfcc",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "JSONL",
                    "sequence": 2,
                    "sysId": "5043b943e0ed4c8cb56059eff0230562",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Paraquet",
                    "sequence": 3,
                    "sysId": "128a637c0e424f00b46d2c02f1993f7d",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "ORC",
                    "sequence": 4,
                    "sysId": "e01fe028b5f34aa385d3a7340cf091ab",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 2",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the Source file format for the data load in to table",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Source File Format",
            "name": "file_format",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 9,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_local_file,load_cloud_file",
            "sysId": "64f411bfe5724fc4aa343b86def6f5d1"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 7",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the table ID(Name of the table where the file needs to be loaded) ",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Table ID",
            "name": "table_id",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 10,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_local_file,load_cloud_file",
            "sysId": "4667c1d2e73f47219f951fdf8095bbef"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 8",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": " An integer indicating the number of header rows in the source data.",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Header Row to Skip",
            "name": "header_row_skip",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 11,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_local_file,load_cloud_file",
            "sysId": "e527a1ebc83a481b8dd58641f932b5a0"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": "False",
            "booleanValueType": "true/false",
            "booleanYesValue": "True",
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Boolean Field 1",
            "fieldType": "Boolean",
            "fieldValue": "true",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "enable schemal auto detection when loading data applicable only for JSON and CSV format",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Schema Auto Detect",
            "name": "schema_detect",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 12,
            "showIfField": "Choice Field 2",
            "showIfFieldValue": "CSV,JSONL",
            "sysId": "ab8cf2370c374891bb9f17b2f78d7b83"
        }
    ],
    "name": "Google-BigQuery",
    "outputFailureOnly": false,
    "outputReturnFile": null,
    "outputReturnNline": "100",
    "outputReturnSline": "1",
    "outputReturnText": null,
    "outputReturnType": "NONE",
    "outputType": "STDOUT",
    "runtimeDir": null,
    "script": "#!/opt/universal/python3.6/bin/python3\n###########################################################\n#    Name: gcp_bigQuery.py\n#\n#    Purpose: Universal controller integration functionalities with GCP BigQuery services\n#\n#\n#    Prerequisites:\n#     - Universal Agent for Windows/Linux\n#     - Python 3.6.x\n#     - Requires the Python modules\n#     - datetime, google-cloud-bigquery,argparse, sys\n#\n#\n#     Version History:\n#     1.0  Ravi Murugesan 2020-11-17 Initial Version\n####################################################\nversion = \"1.0\"\n\n# Used modules\n\nimport glob\nimport sys, os\nimport datetime, time\nimport logging\nimport argparse\nfrom google.cloud import bigquery\nfrom google.oauth2 import service_account\n# -- logging settings DEBUG, INFO, WARNING, ERROR, CRITICAL\n\nlogging.basicConfig(level=logging.INFO, format=' %(asctime)s - %(levelname)s - %(message)s')\n##\n##Main Function\n##\ndef main():\n    Set_Variables()  # -- Set Variables from Universal Task Form or Command Line Input\n    if args.bigquery_function == \"execute_query\":\n        execute_query()\n    elif args.bigquery_function == \"list_dataset\":\n        list_dataset()\n    elif args.bigquery_function == \"list_tables\":\n        list_tables()\n    elif args.bigquery_function == \"job_info\":\n        job_info()\n    elif args.bigquery_function == \"create_dataset\":\n        create_dataset()\n    elif args.bigquery_function == \"load_local_file\":\n        load_local_file()\n    elif args.bigquery_function == \"load_cloud_file\":\n        load_cloud_file()\n\n#####################################################################################\n# --\ndef Set_Variables():\n    parser = argparse.ArgumentParser(description='Purpose : Execute a GCP BigQuery function')\n    # ## -->GCP BigQuery Task Settings\n    parser.add_argument(\"--gcp_projectid\", default=\"${ops_BQ_gcp_projectid}\")\n    parser.add_argument(\"--api_key\", default=\"${ops_BQ_api_key}\")\n    parser.add_argument(\"--bigquery_function\", default=\"${ops_BQ_bigquery_function}\")\n    parser.add_argument(\"--bigquery_data\", default=\"${ops_BQ_bigquery_data}\")\n    parser.add_argument(\"--dataset_id\", default=\"${ops_BQ_dataset_id}\")\n    parser.add_argument(\"--job_id\", default=\"${ops_BQ_job_id}\")\n    parser.add_argument(\"--location\", default=\"${ops_BQ_location}\")\n    parser.add_argument(\"--local_file_path\", default=\"${ops_BQ_local_file_path}\")\n    parser.add_argument(\"--cloud_file\", default=\"${ops_BQ_cloud_file}\")\n    parser.add_argument(\"--file_format\", default=\"${ops_BQ_file_format}\")\n    parser.add_argument(\"--header_row_skip\", default=\"${ops_BQ_header_row_skip}\")\n    parser.add_argument(\"--schema_detect\", default=\"${ops_BQ_schema_detect}\")\n    parser.add_argument(\"--table_id\", default=\"${ops_BQ_table_id}\")\n    ################################################################################################\n    # ## --\n    global args\n    args = parser.parse_args()\n    # -- Setup Logging\n    logging.info(\"Executing version \" + version + \" with the following paramaters\")\n    logging.info(args)\n# --\n# --   \n#This function is to establish connection with GCP BigQuery\n#\ndef connect_gcp():\n# Make the connection to Google Cloud\n    try:\n        api_key_path = '''${_scriptPath('${ops_BQ_api_key}')}'''\n        #api_key_data = api_key_path.read()\n        #print(api_key_path)\n        credentials=service_account.Credentials.from_service_account_file(api_key_path,\n                                                     scopes=[\"https://www.googleapis.com/auth/cloud-platform\"])\n        bigquery_client = bigquery.Client(credentials=credentials, project=credentials.project_id,)\n        logging.info(\"Connection established with Google Cloud - BigQuery\")\n        return bigquery_client\n    except Exception as e:\n        logging.error(\"Error in connection to Google cloud - check API key\")\n        logging.error(e)\n        sys.exit(1)\n        \n\n# This Function will execute a SQL query against GCP BigQuery\ndef execute_query():\n    bigquery_client=connect_gcp()\n    try:\n        logging.info(\"Initiating Query execution call to GCP-BigQuery\")\n        SQL_script = open(r'''${_scriptPath('${ops_BQ_bigquery_data}')}''', 'r')\n        SQL_data = SQL_script.read()\n        query_job=bigquery_client.query(SQL_data)\n        logging.info(\"Job ID:\"+str(query_job.job_id))\n        results = query_job.result()  # Waits for job to complete.\n        for row in results:\n            print(row)\n        logging.info(\"Query executed successfully\")\n    except Exception as e:\n        logging.error(\"Error in executing Big Query\")\n        logging.error(e)\n        sys.exit(1)\n####\n##\ndef list_tables():\n    client=connect_gcp()\n    try:\n        logging.info(\"Initiating call to GCP-BigQuery services\")\n        tables_list=client.list_tables(args.dataset_id)\n        print(\"Tables contained in '{}':\".format(args.dataset_id))\n        for table in tables_list:\n            print(\"{}.{}.{}\".format(table.project, table.dataset_id, table.table_id))\n        logging.info(\"Listed Tables within the dataset successfully\")\n    except Exception as e:\n        logging.error(\"Error in listing tables\")\n        logging.error(e)\n        sys.exit(1)\n\n#  \ndef list_dataset():\n    client=connect_gcp()\n    try:\n        logging.info(\"Initiating call to GCP-BigQuery services\")\n        datsets_list=client.list_datasets()\n        print(\"Dataset(s) contained in '{}':\".format(args.gcp_projectid))\n        for dataset in datsets_list:\n            print(\"{}.{}\".format(dataset.project, dataset.dataset_id))\n        logging.info(\"Listed dataset within the dataset successfully\")\n    except Exception as e:\n        logging.error(\"Error in listing tables\")\n        logging.error(e)\n        sys.exit(1)\n#\n#\ndef job_info():\n    client=connect_gcp()\n    try:\n        logging.info(\"Initiating call to GCP-BigQuery services\")\n        job=client.get_job(args.job_id,location=args.location)\n        # Print selected job properties\n        print(\"Details for job {} running in {}:\".format(args.job_id, args.location))\n        print(\n            \"\\tType: {}\\n\\tState: {}\\n\\tCreated: {}\".format(\n                job.job_type, job.state, job.created\n                ))\n    except Exception as e:\n        logging.error(\"Error in Retrieving the job info\")\n        logging.error(e)\n        sys.exit(1)\n###\n##\ndef create_dataset():\n    client=connect_gcp()\n    try:\n        logging.info(\"Initiating call to GCP-BigQuery services -create Dataset\")\n        dataset=client.dataset(args.dataset_id)\n        dataset.location=args.location\n        dataset=client.create_dataset(dataset,timeout=30)\n        print(\"Created dataset {}.{}\".format(client.project, dataset.dataset_id))\n    except Exception as e:\n        logging.error(\"Error in creating datset\")\n        logging.error(e)\n        sys.exit(1)\n##\n##Function to load the local file in to BigQuery Table\ndef load_local_file():\n    client=connect_gcp()\n    try:\n        logging.info(\"Initiating call to GCP-BigQuery services -Load local data in to BigQuery Dataset Table\")\n        #source_name = os.path.basename(args.local_file_path)\n        #file_path = os.path.dirname(args.local_file_path)\n        table_id=args.gcp_projectid+\".\"+args.dataset_id+\".\"+args.table_id\n        logging.info(\"Table ID: \"+table_id)\n        if args.header_row_skip == \"\":\n            skip_header=0\n        else:\n            skip_header=int(args.header_row_skip)\n        ###set the Job_Config Parameters for execution\n        if args.schema_detect == \"true\":\n            job_config = bigquery.LoadJobConfig(\n                source_format=args.file_format, skip_leading_rows=skip_header, autodetect=True,)\n        else:\n            logging.info(\"Auto Schema is set to False , Checking the Schema definition in BigQuery SQL Or schema\")\n            schema_script = open(r'''${_scriptPath('${ops_BQ_bigquery_data}')}''', 'r')\n            schema_data = schema_script.read()\n            job_config = bigquery.LoadJobConfig(\n                source_format=args.file_format, skip_leading_rows=skip_header, schema=schema_data,)\n        logging.info(\"**Job_Config is ok **\")\n        #####Set the local file as source file\n        with open(args.local_file_path, \"rb\") as source_file:\n            job = client.load_table_from_file(source_file, table_id, job_config=job_config)\n        logging.info(\"Trigger Job successfull \"+str(job.job_id))\n        job.result()  # Waits for the job to complete.\n        logging.info(\"Table: \"+table_id +\" created successfully\")\n        logging.info(\"Load completed with local file:\"+args.local_file_path)\n        table = client.get_table(table_id)  # Make an API request.\n        print(\n            \"Loaded {} rows and {} columns to {}\".format(\n                table.num_rows, len(table.schema), table_id))\n\n    except Exception as e:\n        logging.error(\"Error in Dataload to the Table\")\n        logging.error(e)\n        sys.exit(1)\n#\n#\ndef load_cloud_file():\n    client=connect_gcp()\n    try:\n        logging.info(\"Initiating call to GCP-BigQuery services -Load cloud storage in to BigQuery Dataset Table\")\n        #source_name = os.path.basename(args.local_file_path)\n        #file_path = os.path.dirname(args.local_file_path)\n        table_id=args.gcp_projectid+\".\"+args.dataset_id+\".\"+args.table_id\n        logging.info(\"Table ID: \"+table_id)\n        if args.header_row_skip == \"\":\n            skip_header=0\n        else:\n            skip_header=int(args.header_row_skip)\n        if args.schema_detect == \"true\":\n            job_config = bigquery.LoadJobConfig(\n                source_format=args.file_format, skip_leading_rows=skip_header, autodetect=True,)\n        else:\n            logging.info(\"Auto Schema is set to False , Checking the Schema definition in BigQuery SQL Or schema\")\n            schema_script = open(r'''${_scriptPath('${ops_BQ_bigquery_data}')}''', 'r')\n            schema_data = schema_script.read()\n            job_config = bigquery.LoadJobConfig(\n                source_format=args.file_format, skip_leading_rows=skip_header,schema=schema_data,)\n        logging.info(\"**Job_Config is ok **\")\n        load_job = client.load_table_from_uri(args.cloud_file, table_id, job_config=job_config)\n        logging.info(\"Trigger Job successfull \"+str(load_job.job_id))\n        load_job.result()  # Waits for the job to complete.\n        logging.info(\"Table: \"+table_id +\" created successfully\")\n        logging.info(\"Load completed with Cloud storage:\"+args.cloud_file)\n        table = client.get_table(table_id)  # Make an API request.\n        print(\n            \"Loaded {} rows and {} columns to {}\".format(\n                table.num_rows, len(table.schema), table_id))\n\n    except Exception as e:\n        logging.error(\"Error in cloud Dataload to the Table\")\n        logging.error(e)\n        sys.exit(1)\n#  \n# Start the main method\nmain()\n\n",
    "scriptTypeWindows": "uapy",
    "scriptUnix": null,
    "scriptWindows": null,
    "sysId": "144e65b60b844dc8b102092db884c1e6",
    "useCommonScript": true,
    "variablePrefix": "BQ",
    "waitForOutput": false
}